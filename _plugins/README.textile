h1. Jekyll Plugins

I've created a bunch of plugins based on those included in "jekyll_ext":https://github.com/rfelix/jekyll_ext. I was sort of tired of having to install @jekyll_ext@, and since Jekyll has had a plugin system since around version 0.6 or so, I decided to migrate the plugins I use to Jekyll proper.

Here's a quick explanation of each extension:
* *archive*: allows you to automatically generate archive pages for dates like 2010/, 2010/01/, and 2010/01/12 using files in <em>_layouts</em> to specify what each page will look like. <em>e.g. Posts for "January 2010":http://josediazgonzalez.com/2010/01</em>
* *generic_index*: allows you to automatically generate index pages for each of the site.config @index_pages@. Currently iterates over collections already in the site, meaning all you need to do to have index pages for tags and categories is add them to the @index_pages@ @site.config@ key. Creates specific collection pages from layouts in <em>_layouts</em> to specify what each page will look like. <em>e.g. "CakePHP":http://josediazgonzalez.com/categories/cakephp</em>. Also creates a listing of all of a particular collection. <em>e.g. "Categories":http://josediazgonzalez.com/categories</em>. If the yaml maps to a boolean @true@, related collection items will appear in @page.related@
* *iterator*: allows you to iterate over all tags/categories and then iterate over the posts in those tags/categories. You can use this to automatically generate a tag cloud and a category page listing. <em>e.g. "Tag Cloud on Sidebar":http://josediazgonzalez.com/categories/cakephp</em>
* *helpers*: A bunch of random Liquid Filters I created for use on my blog
* *blockquote*: Allows the usage of blockquotes with attribution within your application by doing @{% blockquote John Hancock %} Content {% endblockquote %}@. Also adds support for pullquotes: @{% pullquote John Hancock %} Content {% endpullquote %}@.
* *post_type*: Allows the creation of a series of posts based on a type. Useful if you want to create a portfolio or gallery from an @_galleries@ or @_portfolios@ directory. 

All plugins reside locally, in the _plugins folder, and in theory would be safe to run on Github. They may not be the best of Ruby code, since I am still but a Ruby apprentice, but they work fine for me :)

Any undocumented plugins are not of my own creation. Please refer to their docblocks for more information.